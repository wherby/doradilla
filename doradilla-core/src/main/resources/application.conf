akka.actor.debug.receive=on
akka {
  loggers = [akka.event.slf4j.Slf4jLogger]
  #loglevel = Info
  loglevel = Debug

  # Log the complete configuration at INFO level when the actor system is started.
  # This is useful when you are uncertain of what configuration is used.
  #log-config-on-start = on

  actor {
   // provider = "akka.cluster.ClusterActorRefProvider"
    debug {
      # enable DEBUG logging of actor lifecycle changes
      lifecycle = off
      # enable DEBUG logging of unhandled messages
      unhandled = off
      # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill etc.)
      autoreceive = off
      # enable function of LoggingReceive, which is to log any received message at
      # DEBUG level
      receive = on
      # enable DEBUG logging of all LoggingFSMs for events, transitions and timers
      fsm = off
    }
  }
}

dora {
  doradilla{
    queue{
      #type = "Fifo"
    }
  }

  cluster-setting{
    hostname = "127.0.0.1"
    hostname = ${?DORA_HOSTNAME}
    port = 1600
    port = ${?DORA_PORT}
    seed-ip = "127.0.0.1"
    seed-ip = ${?DORA_SEEDIP}
    seed-port = 1600
    seed-port = ${?DORA_SEEDPORT}
    cluster-name = "clustering-cluster"
  }

  blocking-io-dispatcher {
    type = Dispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
      fixed-pool-size = 32
    }
    throughput = 3
  }


  fsmNumber = 1

  akka.actor.debug.receive = on
  akka {
    cluster.jmx.multi-mbeans-in-same-jvm = on
    loggers = [akka.event.slf4j.Slf4jLogger]
    loglevel = debug

    # Log the complete configuration at INFO level when the actor system is started.
    # This is useful when you are uncertain of what configuration is used.
    #log-config-on-start = on

    actor {
      provider = "akka.cluster.ClusterActorRefProvider"
      debug {
        # enable DEBUG logging of actor lifecycle changes
        lifecycle = off
        # enable DEBUG logging of unhandled messages
        unhandled = off
        # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill etc.)
        autoreceive = off
        # enable function of LoggingReceive, which is to log any received message at
        # DEBUG level
        receive = on
        # enable DEBUG logging of all LoggingFSMs for events, transitions and timers
        fsm = off
      }
    }

    remote {
      log-remote-lifecycle-events = on
      netty.tcp {
        hostname = ${?dora.cluster-setting.hostname}
        port =   ${?dora.cluster-setting.port}
      }
    }
    cluster {
      seed-nodes = [
        "akka.tcp://"${dora.cluster-setting.cluster-name}"@"${dora.cluster-setting.hostname}":"${dora.cluster-setting.port}
      ]
      auto-down-unreachable-after = 10s
    }
  }
}





